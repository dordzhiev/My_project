import 'package:courier_app/common/graphql/fragments/order.graphql.dart';
import 'package:courier_app/common/graphql/schema.graphql.dart';

List<Fragment$Order> generateOrderFragments() {
  return [
    Fragment$Order(
      id: 1,
      status: Enum$OrderStatus.REGISTERED,
      paymentType: Enum$OrderPaymentType.CASH,
      orderAmount: 10.0,
      deliveryCostForCustomer: 2.0,
      isPaymentCompleted: false,
      isPrepaidToPartner: false,
      createdAt: DateTime.now(),
      expectedReadyTime: DateTime.now().add(const Duration(minutes: 30)),
      expectedDeliveryTime: DateTime.now().add(const Duration(minutes: 45)),
      restaurantAddress: 'ул. Пушкина, д.10',
      restaurantName: 'Ресторан "У Пушкина"',
      restaurantPhoneNumber: '+7 (999) 123-45-67',
      customerAddress: 'ул. Лермонтова, д.5',
      customerName: 'Иван Иванов',
      customerPhoneNumber: '+7 (999) 765-43-21',
    ),
    Fragment$Order(
      id: 2,
      status: Enum$OrderStatus.ON_THE_WAY,
      orderAmount: 20.0,
      deliveryCostForCustomer: 3.0,
      isPaymentCompleted: true,
      isPrepaidToPartner: true,
      createdAt: DateTime.now().subtract(const Duration(hours: 1)),
      expectedReadyTime: DateTime.now().add(const Duration(minutes: 20)),
      expectedDeliveryTime: DateTime.now().add(const Duration(minutes: 35)),
      restaurantAddress: 'ул. Гоголя, д.7',
      restaurantName: 'Ресторан "Гоголь"',
      restaurantPhoneNumber: '+7 (999) 111-22-33',
      customerAddress: 'ул. Тургенева, д.12',
      customerName: 'Мария Петрова',
      customerPhoneNumber: '+7 (999) 333-22-11',
    ),
    Fragment$Order(
      id: 3,
      status: Enum$OrderStatus.READY,
      orderAmount: 15.0,
      deliveryCostForCustomer: 2.5,
      isPaymentCompleted: true,
      isPrepaidToPartner: false,
      createdAt: DateTime.now().subtract(const Duration(minutes: 45)),
      expectedReadyTime: DateTime.now().subtract(const Duration(minutes: 10)),
      expectedDeliveryTime: DateTime.now().add(const Duration(minutes: 5)),
      restaurantAddress: 'ул. Достоевского, д.3',
      restaurantName: 'Ресторан "Достоевский"',
      restaurantPhoneNumber: '+7 (999) 444-55-66',
      customerAddress: 'ул. Чехова, д.8',
      customerName: 'Петр Сидоров',
      customerPhoneNumber: '+7 (999) 987-65-43',
    ),
    Fragment$Order(
      id: 4,
      status: Enum$OrderStatus.ON_THE_WAY,
      orderAmount: 25.0,
      deliveryCostForCustomer: 4.0,
      isPaymentCompleted: true,
      isPrepaidToPartner: true,
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
      expectedReadyTime: DateTime.now().subtract(const Duration(minutes: 30)),
      expectedDeliveryTime: DateTime.now().add(const Duration(minutes: 15)),
      restaurantAddress: 'ул. Толстого, д.15',
      restaurantName: 'Ресторан "Толстой"',
      restaurantPhoneNumber: '+7 (999) 777-88-99',
      customerAddress: 'ул. Достоевского, д.10',
      customerName: 'Анна Иванова',
      customerPhoneNumber: '+7 (999) 111-00-99',
    ),
    Fragment$Order(
      id: 5,
      status: Enum$OrderStatus.DELIVERED,
      orderAmount: 12.0,
      deliveryCostForCustomer: 2.0,
      isPaymentCompleted: true,
      isPrepaidToPartner: false,
      createdAt: DateTime.now().subtract(const Duration(hours: 2)),
      expectedReadyTime: DateTime.now().subtract(const Duration(minutes: 15)),
      expectedDeliveryTime: DateTime.now().subtract(const Duration(minutes: 5)),
      restaurantAddress: 'ул. Пушкина, д.5',
      restaurantName: 'Ресторан "Пушкин"',
      restaurantPhoneNumber: '+7 (999) 222-33-44',
      customerAddress: 'ул. Лермонтова, д.8',
      customerName: 'Алексей Смирнов',
      customerPhoneNumber: '+7 (999) 777-66-55',
    ),
  ];
}
